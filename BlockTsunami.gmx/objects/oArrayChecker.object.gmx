<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sHaamu</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/*
for(var vertical= 0; vertical &lt;= 14; vertical++){
    for(var horizontal = 0; horizontal &lt;=9; horizontal++){
        playfield[vertical,horizontal] = 3;
    }
}
for(var vertical= 0; vertical &lt; 15; vertical++){
    CheckV = y + (32 * vertical);
    for(var horizontal = 0; horizontal &lt; 10; horizontal++){
        CheckH = x + (32 * horizontal) ;
        if (instance_place(CheckH,CheckV,oPlayerBlocks) or instance_place(CheckH,CheckV,oBasicBlock) or instance_place(CheckH,CheckV,oNoInputBlocks)){
            playfield[vertical,horizontal] = 1;

            // instance_create(CheckH, CheckV, oBasicBlock);


        } else {
            playfield[vertical,horizontal] = 0;
        }
    }
}
DrawBlocks(playfield);
show_debug_message("ennen syöttöä");
show_debug_message(playfield[]);

// rivin tarkistus ja poisto
// var Rivit[];
var Rivi = 0;

for(var a = 0; a &lt; 15; a++){
    var PalikatRivissa = 0;
    for(var b = 0; b &lt; 10; b++){
        if (playfield[a,b] == 1) {
            PalikatRivissa++;
            if(PalikatRivissa == 10){
                show_debug_message("Palikat rivissa:");
                show_debug_message(PalikatRivissa);
                for(var c = 0; c &lt; 10; c++){
                    CheckV = y + (32 * a);
                    CheckH = x + (32 * c);
                    Tuhottava = instance_place(CheckH,CheckV,oBasicBlock);
                    with(Tuhottava){
                        instance_destroy();
                    }
                    playfield[a,c] = 0;
                }
                for(var d = a; d &gt; 0; d--){
                    for(var e = 0; e &lt; 10; e++){
                        playfield[d,e] = playfield[d-1,e];
                    }
                }
                DrawBlocks(playfield);
                PalikatRivissa = 0;
                //Rivit[Rivi] = a;
                //Rivi++;
            }
        }
        
    }
   
}

show_debug_message(playfield[]);
with(oPlayerBlocks){
    instance_destroy();
}

RandomBlocksToList();
instance_destroy();
*/

for(var vertical= 0; vertical &lt;= 19; vertical++){
    for(var horizontal = 0; horizontal &lt;=9; horizontal++){
        playfield[vertical,horizontal] = 3;
    }
}
for(var vertical= 0; vertical &lt; 20; vertical++){
    CheckV = 64 + (32 * vertical);
    for(var horizontal = 0; horizontal &lt; 10; horizontal++){
        CheckH = 192 + (32 * horizontal) ;
        if (/*instance_place(CheckH,CheckV,oPlayerBlocks) or*/ instance_place(CheckH,CheckV,oBasicBlock) or  instance_place(CheckH,CheckV,oNoInputBlocks)){
            playfield[vertical,horizontal] = 1;

            // instance_create(CheckH, CheckV, oBasicBlock);


        } else {
            playfield[vertical,horizontal] = 0;
        }
    }
}
DrawBlocks(playfield);
show_debug_message("ennen syöttöä");
show_debug_message(playfield[]);

// rivin tarkistus ja poisto
// var Rivit[];
// var Rivi = 0;

for(var a = 19; a &gt; 0; a--){
    var PalikatRivissa = 0;
    for(var b = 0; b &lt; 10; b++){
        if (playfield[a,b] == 1) {
            PalikatRivissa++;
            if(PalikatRivissa == 10){
                show_debug_message("Palikat rivissa:");
                show_debug_message(PalikatRivissa);
                for(var c = 0; c &lt; 10; c++){
                    CheckV = oArrayChecker.y + (32 * a);
                    CheckH = oArrayChecker.x + (32 * c);
                    Tuhottava = instance_place(CheckH,CheckV,oBasicBlock);
                    with(Tuhottava){
                        instance_destroy();
                    }
                    playfield[a,c] = 0;
                }
                for(var d = a; d &gt; 0; d--){
                    for(var e = 0; e &lt; 10; e++){
                        playfield[d,e] = playfield[d-1,e];
                    }
                }
                global.Score += 100;
                DrawBlocks(playfield);
                PalikatRivissa = 0;
                //Rivit[Rivi] = a;
                //Rivi++;
            }
            for(var i = 0; i &lt; 3; i++){
                for(var Rivi = 0; Rivi &lt; 10; Rivi++){
                    if(playfield[i,Rivi] = 1){
                        game_end();
                    }
                }
            }
             
        }
        
    }
   
}

show_debug_message(playfield[]);


with(oPlayerBlocks){
    instance_destroy();
}

if(global.Order &lt;= global.Wave){
RandomBlocksToList();
}


instance_destroy();

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
