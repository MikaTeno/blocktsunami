<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>global.Order = 0;
global. BlockName = "Blank";
global.BlockFrame = 0;
global.BlockX = 0;
global.NewInfo = false;

global.FrameForBlock = 0;

audio_play_sound(soundMusic, true, 1);

Counter = 0;



Timer = room_speed - 50;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>instance_create(192, 64, oArrayChecker);
global.WaveAtPlay++;
global.Wave = global.Wave + 1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>



if (global.Order == global.Wave){

with(oPlayerBlocks){
    instance_destroy()
    }
    
with(oHaamut){
    instance_destroy()
    }

if (Timer == 0) {       
  show_debug_message(Counter);  
if (Counter &lt; global.Wave){
    
        audio_play_sound(Waves,10,false);

    global.FrameForBlock = BlockArray[Counter, 1];
     
       
       if( BlockArray[Counter, 0] == "oBlock1"){
            instance_create (BlockArray[Counter, 2], 0, oBlock1NI);
        }
        
        if(BlockArray[Counter, 0] == "oBlock2"){
            instance_create (BlockArray[Counter, 2], 0, oBlock2NI);
        }
        
        if(BlockArray[Counter, 0] == "oBlock3"){
            instance_create (BlockArray[Counter, 2], 0, oBlock3NI);
        }
        
        if(BlockArray[Counter, 0] == "oBlock4"){
            instance_create (BlockArray[Counter, 2], 0, oBlock4NI);
        }
        
        if(BlockArray[Counter, 0] == "oBlock5"){
            instance_create (BlockArray[Counter, 2], 0, oBlock5NI);
        }
        
        if(BlockArray[Counter, 0] == "oBlock6"){
            instance_create (BlockArray[Counter, 2], 0, oBlock6NI);
        }
        
        if(BlockArray[Counter, 0] == "oBlock7"){
            instance_create (BlockArray[Counter, 2], 0, oBlock7NI);
        }

        if(BlockArray[Counter, 0] == "oBlock8"){
            instance_create (BlockArray[Counter, 2], 0, oBlock8NI);
        }

   
        
    Counter = Counter + 1;
    Timer = room_speed - 50;
  
        }
        

        
        
    
    }
Timer = Timer - 1;


if (Counter == global.Wave){
 Counter = 0;
 global.Order = 0;
 alarm[0] = global.Wave * 22;
}


}





if (global.NewInfo == true){
    BlockArray[global.Order, 0] = global.BlockName;
    BlockArray[global.Order, 1] = global.BlockFrame;
    BlockArray[global.Order, 2] = global.BlockX;
    global.Order = global.Order + 1;
    global.NewInfo = false;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
