<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//var CanMove = true;

image_speed = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>    //Palikan putoaminen
BlockSpeed = 1;
CanMove = true;
OnlyOnce = true;

if (keyboard_check_pressed(vk_down) and CanMove == true){
    while (!place_meeting(x,y+1,oBlocks)){
        y = y + 1;
        if(OnlyOnce){
            audio_play_sound(soundBlockHit1,10,false);
            
        }
        OnlyOnce = false;
        
    }
    Timer = room_speed - 30;
}



if (place_meeting (x, y+1, oBlocks)){
    CanMove = false;

}




// Voiko liikkua aka onko päässyt pohjalle
if (CanMove == true){

    /*
    //Palikka valuu alas
    if (!place_meeting(x,y+1,oBlocks)){

    y = y + BlockSpeed;
    }
    
    */


    //Pyöritys
    if keyboard_check_pressed(vk_space){
        
      image_index = image_index + 1;
      
      //pyörityksen korjaus koskien oBasicBlockia
      if (place_meeting(x+1,y,oBlocks)){
        x = x - 32;
        }
        
     if (place_meeting(x-1,y,oBlocks)){
        x = x + 32;
        }
      
        
    }



    //Pyörityksen korjaus

    if (place_meeting(x,y,oWallLeft)){
        x = x + 32;
     
    }

    if (place_meeting(x,y,oWallRight)){
        x = x - 32;
    }


    //Palikan liikkuminen
    if keyboard_check_pressed (vk_left){
        if (!place_meeting(x-1,y,oBlocks)){
     x = x - 32;
        }
    }

    if keyboard_check_pressed (vk_right){
        if (!place_meeting(x+1,y,oBlocks)){
        x = x + 32;
        }
    }
    
    
    
    //osuuko maahan
    if (place_meeting(x,y+1,oBlocks)){
        
        CanMove = false;
        Timer = room_speed - 30;

  
    }
}


  


      
if (CanMove == false){
    
    Timer = Timer - 1;
       
    if (Timer == 0){
        with(oHaamut){
        
        
            
            
        
            instance_destroy();
        }
       
        global.BlockName = object_get_name(object_index);
        global.BlockFrame = image_index;
        global.BlockX = x;
        global.NewInfo = true;
        
        
        instance_create(192,64,oArrayChecker);
        
      
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
